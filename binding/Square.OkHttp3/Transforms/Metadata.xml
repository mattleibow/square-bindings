<metadata>
    <!--
  This sample removes the class: android.support.v4.content.AsyncTaskLoader.LoadTask:
  <remove-node path="/api/package[@name='android.support.v4.content']/class[@name='AsyncTaskLoader.LoadTask']" />
  
  This sample removes the method: android.support.v4.content.CursorLoader.loadInBackground:
  <remove-node path="/api/package[@name='android.support.v4.content']/class[@name='CursorLoader']/method[@name='loadInBackground']" />
  -->

    <attr path="/api/package[@name='okhttp3']" name="managedName">Square.OkHttp3</attr>

    <remove-node path="/api/package[starts-with(@name, 'okhttp3.internal')]" />
    <remove-node path="/api/package/class/method[starts-with(@name, '-')]" />

    <remove-node path="/api/package/class[contains(@name,'.Companion')]" />
    <remove-node path="/api/package/class/field[@name='Companion']" />

    <remove-node path="/api/package/*/implements[starts-with(@name,'kotlin.jvm.internal')]" />

    <attr path="/api/package[@name='okhttp3']/interface[@name='Authenticator']/method[@name='authenticate']/parameter[1]" name="managedName">route</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Authenticator']/method[@name='authenticate']/parameter[2]" name="managedName">response</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='Call']/method[@name='enqueue']/parameter[1]" name="managedName">responseCallback</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Call.Factory']/method[@name='newCall']/parameter[1]" name="managedName">request</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='Callback']/method[@name='onFailure']/parameter[1]" name="managedName">call</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Callback']/method[@name='onFailure']/parameter[2]" name="managedName">exception</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Callback']/method[@name='onResponse']/parameter[1]" name="managedName">call</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Callback']/method[@name='onResponse']/parameter[2]" name="managedName">response</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='CookieJar']/method[@name='loadForRequest']/parameter[1]" name="managedName">url</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='CookieJar']/method[@name='saveFromResponse']/parameter[1]" name="managedName">url</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='CookieJar']/method[@name='saveFromResponse']/parameter[2]" name="managedName">cookies</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='Dns']/method[@name='lookup']/parameter[1]" name="managedName">hostname</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='EventListener.Factory']/method[@name='create']/parameter[1]" name="managedName">call</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='Handshake']/method[@name='get' and count(parameter)=1 and parameter[1][@type='javax.net.ssl.SSLSession']]/parameter[1]" name="managedName">session</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='Headers']/method[@name='of' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]/parameter[1]" name="managedName">headers</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='HttpUrl']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">url</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='HttpUrl']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.net.URI']]/parameter[1]" name="managedName">uri</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='HttpUrl']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.net.URL']]/parameter[1]" name="managedName">url</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='HttpUrl']/method[@name='parse' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">url</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor']/method[@name='intercept']/parameter[1]" name="managedName">chain</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='proceed']/parameter[1]" name="managedName">request</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withConnectTimeout']/parameter[1]" name="managedName">timeout</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withConnectTimeout']/parameter[2]" name="managedName">unit</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withReadTimeout']/parameter[1]" name="managedName">timeout</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withReadTimeout']/parameter[2]" name="managedName">unit</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withWriteTimeout']/parameter[1]" name="managedName">timeout</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='Interceptor.Chain']/method[@name='withWriteTimeout']/parameter[2]" name="managedName">unit</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='MediaType']/method[@name='get' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">@string</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='MediaType']/method[@name='parse' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">@string</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='Protocol']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=1 and parameter[1][@type='byte[]']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='java.io.File'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">file</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='okio.ByteString'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=3 and parameter[1][@type='byte[]'] and parameter[2][@type='okhttp3.MediaType'] and parameter[3][@type='int']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='create' and count(parameter)=4 and parameter[1][@type='byte[]'] and parameter[2][@type='okhttp3.MediaType'] and parameter[3][@type='int'] and parameter[4][@type='int']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='RequestBody']/method[@name='writeTo' and count(parameter)=1 and parameter[1][@type='okio.BufferedSink']]/parameter[1]" name="managedName">sink</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='Response']/method[@name='header' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='ResponseBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='ResponseBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='ResponseBody']/method[@name='create' and count(parameter)=2 and parameter[1][@type='okio.ByteString'] and parameter[2][@type='okhttp3.MediaType']]/parameter[1]" name="managedName">content</attr>
    <attr path="/api/package[@name='okhttp3']/class[@name='ResponseBody']/method[@name='create' and count(parameter)=3 and parameter[1][@type='okio.BufferedSource'] and parameter[2][@type='okhttp3.MediaType'] and parameter[3][@type='long']]/parameter[1]" name="managedName">content</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='Route']/constructor[@name='Route' and count(parameter)=3 and parameter[1][@type='okhttp3.Address'] and parameter[2][@type='java.net.Proxy'] and parameter[3][@type='java.net.InetSocketAddress']]/parameter[3]" name="managedName">inetSocketAddress</attr>

    <attr path="/api/package[@name='okhttp3']/class[@name='TlsVersion']/method[@name='valueOf' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">name</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket']/method[@name='close']/parameter[1]" name="managedName">code</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket']/method[@name='close']/parameter[2]" name="managedName">reason</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket']/method[@name='send' and count(parameter)=1 and parameter[1][@type='java.lang.String']]/parameter[1]" name="managedName">text</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket']/method[@name='send' and count(parameter)=1 and parameter[1][@type='okio.ByteString']]/parameter[1]" name="managedName">bytes</attr>

    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket.Factory']/method[@name='newWebSocket']/parameter[1]" name="managedName">request</attr>
    <attr path="/api/package[@name='okhttp3']/interface[@name='WebSocket.Factory']/method[@name='newWebSocket']/parameter[2]" name="managedName">listener</attr>

    <!--https://github.com/xamarin/java.interop/issues/571-->
    <add-node path="/api/package[@name='okhttp3']/class[@name='Cache']">
      <method abstract="false" deprecated="not deprecated" final="true" name="hitCount" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public" />
      <method abstract="false" deprecated="not deprecated" final="true" name="networkCount" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public" />
      <method abstract="false" deprecated="not deprecated" final="true" name="requestCount" jni-signature="()I" bridge="false" native="false" return="int" jni-return="I" static="false" synchronized="true" synthetic="false" visibility="public" />
    </add-node>
    <add-node path="/api/package[@name='okhttp3']/class[@name='MultipartBody']">
      <method abstract="false" deprecated="not deprecated" final="false" name="contentType" jni-signature="()Lokhttp3/MediaType;" bridge="false" native="false" return="okhttp3.MediaType" jni-return="Lokhttp3/MediaType;" static="false" synchronized="false" synthetic="false" visibility="public" />
    </add-node>
    <add-node path="/api/package[@name='okhttp3']/class[@name='MultipartBody.Builder']">
      <method abstract="false" deprecated="not deprecated" final="true" name="setType" jni-signature="(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;" bridge="false" native="false" return="okhttp3.MultipartBody.Builder" jni-return="Lokhttp3/MultipartBody$Builder;" static="false" synchronized="false" synthetic="false" visibility="public">
        <parameter name="type" type="okhttp3.MediaType" jni-type="Lokhttp3/MediaType;" />
      </method>
    </add-node>

</metadata>
