
variables:
  MONO_VERSION: 5_16_0
  XCODE_VERSION: 9.4.1

trigger:
 - master

jobs:

  - job: build_windows
    displayName: Build on Windows
    pool:
      vmImage: vs2017-win2016
    steps:
      - powershell: .\bootstrapper.ps1
        displayName: Run build
      - task: PublishBuildArtifacts@1
        displayName: Publish artifacts
        inputs:
          artifactName: artifacts_windows
          pathToPublish: output

  - job: build_macos
    displayName: Build on macOS
    pool:
      vmImage: macos-10.13
    steps:
      - bash: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MONO_VERSION)
        displayName: Switch to the latest Xamarin SDK
      - bash: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_$(XCODE_VERSION).app;sudo xcode-select --switch /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
        displayName: Switch to the latest Xcode
      - bash: ./cocoapods.sh
        displayName: Switch to the specific CocoaPod
      - task: InstallAppleCertificate@2
        displayName: Install the iOS certificate
        inputs:
          certSecureFile: 'Components iOS Certificate.p12'
      - task: InstallAppleProvisioningProfile@1
        displayName: Install the iOS provisioning profile
        inputs:
          provProfileSecureFile: 'Components iOS Provisioning.mobileprovision'
      - task: InstallAppleCertificate@2
        displayName: Install the macOS certificate
        inputs:
          certSecureFile: 'Components Mac Certificate.p12'
      - task: InstallAppleProvisioningProfile@1
        displayName: Install the macOS provisioning profile
        inputs:
          provProfileSecureFile: 'Components Mac Provisioning.provisionprofile'
      - task: InstallAppleProvisioningProfile@1
        displayName: Install the tvOS provisioning profile
        inputs:
          provProfileSecureFile: 'Components tvOS Provisioning.mobileprovision'
      - bash: ./bootstrapper.sh
        displayName: Run build
      - task: PublishBuildArtifacts@1
        displayName: Publish artifacts
        inputs:
          artifactName: artifacts_macos
          pathToPublish: output
      - task: CopyFiles@2
        inputs:
          contents: 'output/*.nupkg'
          targetFolder: $(Build.ArtifactStagingDirectory)
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory)
          artifactName: nuget